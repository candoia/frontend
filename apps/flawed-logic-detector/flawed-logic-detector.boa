#  Flawed Logic - Checks and warns against deeply nested if statements.
p: Project = input;
If_Count : output sum [int] of int;

nesting_level := 0;

visit(p, visitor {
before node: CodeRepository -> {
# only look at the latest snapshot
# and only include Java files
snapshot := getsnapshot(node, "");
foreach (i: int; def(snapshot[i]))
visit(snapshot[i]);
stop;
}
before node: Statement ->
if (node.kind == StatementKind.IF) {
    if(nesting_level > 10)
        If_Count[nesting_level] << 1;
        nesting_level++;
}
after node: Statement ->
    if (node.kind == StatementKind.IF)
        nesting_level--;
});
